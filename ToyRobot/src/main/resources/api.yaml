openapi: 3.0.0
info:
  description: API for toy robot simulation
  version: 1.0.0
  title: Toy Robot Simulation Application
tags:
- name: Robot Creation Api
  description: Simulator application for a toy robot
paths:
  /toyrobot:
    get:
      tags:
      - Robot Creation
      summary: get all robots currently stored in the data set
      operationId: getAllRobots
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RobotDetailsResponse'
    post:
      tags:
      - Robot Creation
      summary: Create robot on provided positions of the table top
      operationId: createRobot
      requestBody:
        description: request body required for creation of robot which accpet robot initial position
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotRequestDto'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RobotResponseDto'
  /toyrobot/{id}:
    put:
      tags:
      - Robot Creation
      summary: Update robot on provided directions on the table top
      operationId: updateRobot
      parameters:
      - in: path
        name: id
        description: id for toy robot
        required: true
        schema:
          type: string
      requestBody:
        description: request body required for update the robot intial state which recieve simutaion types
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotRequestDto'
      responses:
        200:
          description: Success
    get:
      tags:
      - Robot Creation
      summary: Get robot against its given id.
      operationId: getRobotById
      parameters:
      - in: path
        name: id
        description: id for toy robot
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RobotDetailsResponse'
    delete:
      tags:
      - Robot Creation
      summary: delete the robot againt the given id
      operationId: deleteRobotById
      parameters:
      - in: path
        name: id
        description: id for toy robot
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
  /simulator:
    post:
      tags:
      - Robot Simulation
      summary: simulate robot on table
      operationId: simulateRobot
      parameters:
      - in: path
        name: id
        description: id for toy robot
        required: true
        schema:
          type: string
      requestBody:
        description: request body required for simulate the robot which recieve simutaion types
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotSimulationRequestDto'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RobotSimulationResponseDto'
    
    get:
      tags:
      - Robot Simulation
      summary: simulate robot on table
      operationId: getAllRobotsSimulation
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RobotSimulationResponseDto'
                
                
components:
  schemas:
    RobotRequestDto:
      properties:
        placeCommand:
          type: string
        robotName:
          type: string
    RobotResponseDto:
      properties:
        toyRobotId:
          type: string
    RobotSimulationRequestDto:
      properties:
        commandsList:
          type: array
          items:
            type: string
    RobotSimulationResponseDto:
      properties:
       reportList:
          type: array
          items:
            type: string
    RobotCordsResponseDto:
      properties:
        uuid:
          type: string
        xPosition:
          type: integer
        yPosition:
          type: integer
        cordinalDirection:
          type: object
          $ref: '#/components/schemas/CardinalDirections'       
       
            
    RobotDetailsResponse:
      properties:
        uuid:
          type: string
        robotName:
          type: string
        createdAt:
          type: string
    Simulations:
      type: string
      enum:
      - LEFT
      - RIGHT
      - MOVE
      - REPORT
      - PLACE
    CardinalDirections:
      type: string
      enum:
      - NORTH
      - EAST
      - SOUTH
      - WEST